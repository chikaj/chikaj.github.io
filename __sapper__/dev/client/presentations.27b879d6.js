import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, e as element, t as text, a as space, f as claim_element, g as children, h as claim_text, b as detach_dev, c as claim_space, j as add_location, m as attr_dev, k as insert_dev, l as append_dev, n as noop } from './client.4d4e8b92.js';

/* src/routes/presentations.svelte generated by Svelte v3.31.2 */

const file = "src/routes/presentations.svelte";

function create_fragment(ctx) {
	let h2;
	let t0;
	let t1;
	let ol;
	let li0;
	let a;
	let t2;
	let t3;
	let li1;
	let t4;

	const block = {
		c: function create() {
			h2 = element("h2");
			t0 = text("Presentations");
			t1 = text("\n\nA list of presentations:\n");
			ol = element("ol");
			li0 = element("li");
			a = element("a");
			t2 = text("Tada presentations!");
			t3 = space();
			li1 = element("li");
			t4 = text("Second presentation");
			this.h();
		},
		l: function claim(nodes) {
			h2 = claim_element(nodes, "H2", {});
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, "Presentations");
			h2_nodes.forEach(detach_dev);
			t1 = claim_text(nodes, "\n\nA list of presentations:\n");
			ol = claim_element(nodes, "OL", {});
			var ol_nodes = children(ol);
			li0 = claim_element(ol_nodes, "LI", {});
			var li0_nodes = children(li0);
			a = claim_element(li0_nodes, "A", { href: true });
			var a_nodes = children(a);
			t2 = claim_text(a_nodes, "Tada presentations!");
			a_nodes.forEach(detach_dev);
			li0_nodes.forEach(detach_dev);
			t3 = claim_space(ol_nodes);
			li1 = claim_element(ol_nodes, "LI", {});
			var li1_nodes = children(li1);
			t4 = claim_text(li1_nodes, "Second presentation");
			li1_nodes.forEach(detach_dev);
			ol_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h2, file, 4, 0, 41);
			attr_dev(a, "href", "presentations/tada");
			add_location(a, file, 8, 8, 103);
			add_location(li0, file, 8, 4, 99);
			add_location(li1, file, 9, 4, 165);
			add_location(ol, file, 7, 0, 90);
		},
		m: function mount(target, anchor) {
			insert_dev(target, h2, anchor);
			append_dev(h2, t0);
			insert_dev(target, t1, anchor);
			insert_dev(target, ol, anchor);
			append_dev(ol, li0);
			append_dev(li0, a);
			append_dev(a, t2);
			append_dev(ol, t3);
			append_dev(ol, li1);
			append_dev(li1, t4);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(h2);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(ol);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Presentations", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Presentations> was created with unknown prop '${key}'`);
	});

	return [];
}

class Presentations extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Presentations",
			options,
			id: create_fragment.name
		});
	}
}

export default Presentations;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2VudGF0aW9ucy4yN2I4NzlkNi5qcyIsInNvdXJjZXMiOltdLCJzb3VyY2VzQ29udGVudCI6W10sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
