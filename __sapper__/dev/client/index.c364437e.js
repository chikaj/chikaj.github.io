import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, a as space, e as element, b as svg_element, t as text, q as query_selector_all, c as detach_dev, f as claim_space, g as claim_element, h as children, j as claim_text, k as set_style, l as attr_dev, m as add_location, x as xlink_attr, n as insert_dev, o as append_dev, p as noop } from './client.31c7b994.js';

var splash = "/client/f77b2cd6e6ab9e5f.svg";

/* src/routes/index.svelte generated by Svelte v3.31.2 */
const file = "src/routes/index.svelte";

function create_fragment(ctx) {
	let t0;
	let div0;
	let svg;
	let defs;
	let linearGradient;
	let stop0;
	let stop1;
	let radialGradient;
	let filter0;
	let feGaussianBlur0;
	let feColorMatrix0;
	let feColorMatrix1;
	let filter1;
	let feGaussianBlur1;
	let filter2;
	let feGaussianBlur2;
	let filter3;
	let feGaussianBlur3;
	let filter4;
	let feGaussianBlur4;
	let filter5;
	let feGaussianBlur5;
	let filter6;
	let feGaussianBlur6;
	let filter7;
	let feGaussianBlur7;
	let filter8;
	let feGaussianBlur8;
	let filter9;
	let feGaussianBlur9;
	let sodipodi_namedview;
	let g0;
	let path0;
	let g1;
	let path1;
	let path2;
	let path3;
	let path4;
	let path5;
	let path6;
	let path7;
	let path8;
	let path9;
	let path10;
	let path11;
	let path12;
	let path13;
	let path14;
	let path15;
	let path16;
	let g2;
	let path17;
	let t1;
	let h2;
	let t2;
	let t3;
	let button;
	let t4;
	let t5;
	let div1;

	const block = {
		c: function create() {
			t0 = space();
			div0 = element("div");
			svg = svg_element("svg");
			defs = svg_element("defs");
			linearGradient = svg_element("linearGradient");
			stop0 = svg_element("stop");
			stop1 = svg_element("stop");
			radialGradient = svg_element("radialGradient");
			filter0 = svg_element("filter");
			feGaussianBlur0 = svg_element("feGaussianBlur");
			feColorMatrix0 = svg_element("feColorMatrix");
			feColorMatrix1 = svg_element("feColorMatrix");
			filter1 = svg_element("filter");
			feGaussianBlur1 = svg_element("feGaussianBlur");
			filter2 = svg_element("filter");
			feGaussianBlur2 = svg_element("feGaussianBlur");
			filter3 = svg_element("filter");
			feGaussianBlur3 = svg_element("feGaussianBlur");
			filter4 = svg_element("filter");
			feGaussianBlur4 = svg_element("feGaussianBlur");
			filter5 = svg_element("filter");
			feGaussianBlur5 = svg_element("feGaussianBlur");
			filter6 = svg_element("filter");
			feGaussianBlur6 = svg_element("feGaussianBlur");
			filter7 = svg_element("filter");
			feGaussianBlur7 = svg_element("feGaussianBlur");
			filter8 = svg_element("filter");
			feGaussianBlur8 = svg_element("feGaussianBlur");
			filter9 = svg_element("filter");
			feGaussianBlur9 = svg_element("feGaussianBlur");
			sodipodi_namedview = svg_element("sodipodi:namedview");
			g0 = svg_element("g");
			path0 = svg_element("path");
			g1 = svg_element("g");
			path1 = svg_element("path");
			path2 = svg_element("path");
			path3 = svg_element("path");
			path4 = svg_element("path");
			path5 = svg_element("path");
			path6 = svg_element("path");
			path7 = svg_element("path");
			path8 = svg_element("path");
			path9 = svg_element("path");
			path10 = svg_element("path");
			path11 = svg_element("path");
			path12 = svg_element("path");
			path13 = svg_element("path");
			path14 = svg_element("path");
			path15 = svg_element("path");
			path16 = svg_element("path");
			g2 = svg_element("g");
			path17 = svg_element("path");
			t1 = space();
			h2 = element("h2");
			t2 = text("Nate Currit");
			t3 = space();
			button = element("button");
			t4 = text("Push me");
			t5 = space();
			div1 = element("div");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-6s0mye\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			div0 = claim_element(nodes, "DIV", { class: true });
			var div0_nodes = children(div0);

			svg = claim_element(
				div0_nodes,
				"svg",
				{
					xmlns: true,
					version: true,
					viewBox: true,
					height: true,
					width: true,
					class: true
				},
				1
			);

			var svg_nodes = children(svg);
			defs = claim_element(svg_nodes, "defs", { id: true }, 1);
			var defs_nodes = children(defs);
			linearGradient = claim_element(defs_nodes, "linearGradient", { "inkscape:collect": true, id: true }, 1);
			var linearGradient_nodes = children(linearGradient);
			stop0 = claim_element(linearGradient_nodes, "stop", { style: true, offset: true, id: true }, 1);
			children(stop0).forEach(detach_dev);
			stop1 = claim_element(linearGradient_nodes, "stop", { style: true, offset: true, id: true }, 1);
			children(stop1).forEach(detach_dev);
			linearGradient_nodes.forEach(detach_dev);

			radialGradient = claim_element(
				defs_nodes,
				"radialGradient",
				{
					"inkscape:collect": true,
					"xlink:href": true,
					id: true,
					cx: true,
					cy: true,
					fx: true,
					fy: true,
					r: true,
					gradientTransform: true,
					gradientUnits: true
				},
				1
			);

			children(radialGradient).forEach(detach_dev);

			filter0 = claim_element(
				defs_nodes,
				"filter",
				{
					style: true,
					"inkscape:label": true,
					id: true
				},
				1
			);

			var filter0_nodes = children(filter0);

			feGaussianBlur0 = claim_element(
				filter0_nodes,
				"feGaussianBlur",
				{
					stdDeviation: true,
					result: true,
					id: true
				},
				1
			);

			children(feGaussianBlur0).forEach(detach_dev);

			feColorMatrix0 = claim_element(
				filter0_nodes,
				"feColorMatrix",
				{
					result: true,
					in: true,
					values: true,
					id: true
				},
				1
			);

			children(feColorMatrix0).forEach(detach_dev);
			feColorMatrix1 = claim_element(filter0_nodes, "feColorMatrix", { id: true, values: true, in: true }, 1);
			children(feColorMatrix1).forEach(detach_dev);
			filter0_nodes.forEach(detach_dev);

			filter1 = claim_element(
				defs_nodes,
				"filter",
				{
					"inkscape:collect": true,
					style: true,
					id: true,
					x: true,
					width: true,
					y: true,
					height: true
				},
				1
			);

			var filter1_nodes = children(filter1);

			feGaussianBlur1 = claim_element(
				filter1_nodes,
				"feGaussianBlur",
				{
					"inkscape:collect": true,
					stdDeviation: true,
					id: true
				},
				1
			);

			children(feGaussianBlur1).forEach(detach_dev);
			filter1_nodes.forEach(detach_dev);

			filter2 = claim_element(
				defs_nodes,
				"filter",
				{
					"inkscape:collect": true,
					style: true,
					id: true,
					x: true,
					width: true,
					y: true,
					height: true
				},
				1
			);

			var filter2_nodes = children(filter2);

			feGaussianBlur2 = claim_element(
				filter2_nodes,
				"feGaussianBlur",
				{
					"inkscape:collect": true,
					stdDeviation: true,
					id: true
				},
				1
			);

			children(feGaussianBlur2).forEach(detach_dev);
			filter2_nodes.forEach(detach_dev);

			filter3 = claim_element(
				defs_nodes,
				"filter",
				{
					"inkscape:collect": true,
					style: true,
					id: true,
					x: true,
					width: true,
					y: true,
					height: true
				},
				1
			);

			var filter3_nodes = children(filter3);

			feGaussianBlur3 = claim_element(
				filter3_nodes,
				"feGaussianBlur",
				{
					"inkscape:collect": true,
					stdDeviation: true,
					id: true
				},
				1
			);

			children(feGaussianBlur3).forEach(detach_dev);
			filter3_nodes.forEach(detach_dev);

			filter4 = claim_element(
				defs_nodes,
				"filter",
				{
					"inkscape:collect": true,
					style: true,
					id: true,
					x: true,
					width: true,
					y: true,
					height: true
				},
				1
			);

			var filter4_nodes = children(filter4);

			feGaussianBlur4 = claim_element(
				filter4_nodes,
				"feGaussianBlur",
				{
					"inkscape:collect": true,
					stdDeviation: true,
					id: true
				},
				1
			);

			children(feGaussianBlur4).forEach(detach_dev);
			filter4_nodes.forEach(detach_dev);

			filter5 = claim_element(
				defs_nodes,
				"filter",
				{
					"inkscape:collect": true,
					style: true,
					id: true,
					x: true,
					width: true,
					y: true,
					height: true
				},
				1
			);

			var filter5_nodes = children(filter5);

			feGaussianBlur5 = claim_element(
				filter5_nodes,
				"feGaussianBlur",
				{
					"inkscape:collect": true,
					stdDeviation: true,
					id: true
				},
				1
			);

			children(feGaussianBlur5).forEach(detach_dev);
			filter5_nodes.forEach(detach_dev);

			filter6 = claim_element(
				defs_nodes,
				"filter",
				{
					"inkscape:collect": true,
					style: true,
					id: true,
					x: true,
					width: true,
					y: true,
					height: true
				},
				1
			);

			var filter6_nodes = children(filter6);

			feGaussianBlur6 = claim_element(
				filter6_nodes,
				"feGaussianBlur",
				{
					"inkscape:collect": true,
					stdDeviation: true,
					id: true
				},
				1
			);

			children(feGaussianBlur6).forEach(detach_dev);
			filter6_nodes.forEach(detach_dev);

			filter7 = claim_element(
				defs_nodes,
				"filter",
				{
					"inkscape:collect": true,
					style: true,
					id: true,
					x: true,
					width: true,
					y: true,
					height: true
				},
				1
			);

			var filter7_nodes = children(filter7);

			feGaussianBlur7 = claim_element(
				filter7_nodes,
				"feGaussianBlur",
				{
					"inkscape:collect": true,
					stdDeviation: true,
					id: true
				},
				1
			);

			children(feGaussianBlur7).forEach(detach_dev);
			filter7_nodes.forEach(detach_dev);

			filter8 = claim_element(
				defs_nodes,
				"filter",
				{
					"inkscape:collect": true,
					style: true,
					id: true,
					x: true,
					width: true,
					y: true,
					height: true
				},
				1
			);

			var filter8_nodes = children(filter8);

			feGaussianBlur8 = claim_element(
				filter8_nodes,
				"feGaussianBlur",
				{
					"inkscape:collect": true,
					stdDeviation: true,
					id: true
				},
				1
			);

			children(feGaussianBlur8).forEach(detach_dev);
			filter8_nodes.forEach(detach_dev);

			filter9 = claim_element(
				defs_nodes,
				"filter",
				{
					"inkscape:collect": true,
					style: true,
					id: true,
					x: true,
					width: true,
					y: true,
					height: true
				},
				1
			);

			var filter9_nodes = children(filter9);

			feGaussianBlur9 = claim_element(
				filter9_nodes,
				"feGaussianBlur",
				{
					"inkscape:collect": true,
					stdDeviation: true,
					id: true
				},
				1
			);

			children(feGaussianBlur9).forEach(detach_dev);
			filter9_nodes.forEach(detach_dev);
			defs_nodes.forEach(detach_dev);

			sodipodi_namedview = claim_element(
				svg_nodes,
				"sodipodi:namedview",
				{
					id: true,
					pagecolor: true,
					bordercolor: true,
					borderopacity: true,
					"inkscape:pageopacity": true,
					"inkscape:pageshadow": true,
					"inkscape:zoom": true,
					"inkscape:cx": true,
					"inkscape:cy": true,
					"inkscape:document-units": true,
					"inkscape:current-layer": true,
					"inkscape:document-rotation": true,
					showgrid: true,
					units: true,
					"inkscape:window-width": true,
					"inkscape:window-height": true,
					"inkscape:window-x": true,
					"inkscape:window-y": true,
					"inkscape:window-maximized": true,
					"inkscape:snap-midpoints": true,
					showguides: true,
					"inkscape:guide-bbox": true,
					"fit-margin-top": true,
					"fit-margin-left": true,
					"fit-margin-right": true,
					"fit-margin-bottom": true
				},
				1
			);

			children(sodipodi_namedview).forEach(detach_dev);

			g0 = claim_element(
				svg_nodes,
				"g",
				{
					"inkscape:label": true,
					"inkscape:groupmode": true,
					id: true,
					style: true,
					transform: true
				},
				1
			);

			var g0_nodes = children(g0);

			path0 = claim_element(
				g0_nodes,
				"path",
				{
					id: true,
					style: true,
					d: true,
					transform: true
				},
				1
			);

			children(path0).forEach(detach_dev);
			g0_nodes.forEach(detach_dev);

			g1 = claim_element(
				svg_nodes,
				"g",
				{
					"inkscape:groupmode": true,
					id: true,
					"inkscape:label": true,
					style: true,
					"sodipodi:insensitive": true,
					transform: true
				},
				1
			);

			var g1_nodes = children(g1);

			path1 = claim_element(
				g1_nodes,
				"path",
				{
					"sodipodi:type": true,
					style: true,
					id: true,
					"sodipodi:sides": true,
					"sodipodi:cx": true,
					"sodipodi:cy": true,
					"sodipodi:r1": true,
					"sodipodi:r2": true,
					"sodipodi:arg1": true,
					"sodipodi:arg2": true,
					"inkscape:flatsided": true,
					"inkscape:rounded": true,
					"inkscape:randomized": true,
					d: true,
					"inkscape:transform-center-x": true,
					"inkscape:transform-center-y": true,
					transform: true
				},
				1
			);

			children(path1).forEach(detach_dev);

			path2 = claim_element(
				g1_nodes,
				"path",
				{
					"sodipodi:type": true,
					style: true,
					id: true,
					"sodipodi:sides": true,
					"sodipodi:cx": true,
					"sodipodi:cy": true,
					"sodipodi:r1": true,
					"sodipodi:r2": true,
					"sodipodi:arg1": true,
					"sodipodi:arg2": true,
					"inkscape:flatsided": true,
					"inkscape:rounded": true,
					"inkscape:randomized": true,
					d: true,
					"inkscape:transform-center-x": true,
					"inkscape:transform-center-y": true,
					transform: true
				},
				1
			);

			children(path2).forEach(detach_dev);

			path3 = claim_element(
				g1_nodes,
				"path",
				{
					"sodipodi:type": true,
					style: true,
					id: true,
					"sodipodi:sides": true,
					"sodipodi:cx": true,
					"sodipodi:cy": true,
					"sodipodi:r1": true,
					"sodipodi:r2": true,
					"sodipodi:arg1": true,
					"sodipodi:arg2": true,
					"inkscape:flatsided": true,
					"inkscape:rounded": true,
					"inkscape:randomized": true,
					d: true,
					"inkscape:transform-center-x": true,
					"inkscape:transform-center-y": true,
					transform: true
				},
				1
			);

			children(path3).forEach(detach_dev);

			path4 = claim_element(
				g1_nodes,
				"path",
				{
					"sodipodi:type": true,
					style: true,
					id: true,
					"sodipodi:sides": true,
					"sodipodi:cx": true,
					"sodipodi:cy": true,
					"sodipodi:r1": true,
					"sodipodi:r2": true,
					"sodipodi:arg1": true,
					"sodipodi:arg2": true,
					"inkscape:flatsided": true,
					"inkscape:rounded": true,
					"inkscape:randomized": true,
					d: true,
					"inkscape:transform-center-x": true,
					"inkscape:transform-center-y": true,
					transform: true
				},
				1
			);

			children(path4).forEach(detach_dev);

			path5 = claim_element(
				g1_nodes,
				"path",
				{
					"sodipodi:type": true,
					style: true,
					id: true,
					"sodipodi:sides": true,
					"sodipodi:cx": true,
					"sodipodi:cy": true,
					"sodipodi:r1": true,
					"sodipodi:r2": true,
					"sodipodi:arg1": true,
					"sodipodi:arg2": true,
					"inkscape:flatsided": true,
					"inkscape:rounded": true,
					"inkscape:randomized": true,
					d: true,
					"inkscape:transform-center-x": true,
					"inkscape:transform-center-y": true,
					transform: true
				},
				1
			);

			children(path5).forEach(detach_dev);

			path6 = claim_element(
				g1_nodes,
				"path",
				{
					"sodipodi:type": true,
					style: true,
					id: true,
					"sodipodi:sides": true,
					"sodipodi:cx": true,
					"sodipodi:cy": true,
					"sodipodi:r1": true,
					"sodipodi:r2": true,
					"sodipodi:arg1": true,
					"sodipodi:arg2": true,
					"inkscape:flatsided": true,
					"inkscape:rounded": true,
					"inkscape:randomized": true,
					d: true,
					"inkscape:transform-center-x": true,
					"inkscape:transform-center-y": true,
					transform: true
				},
				1
			);

			children(path6).forEach(detach_dev);

			path7 = claim_element(
				g1_nodes,
				"path",
				{
					"sodipodi:type": true,
					style: true,
					id: true,
					"sodipodi:sides": true,
					"sodipodi:cx": true,
					"sodipodi:cy": true,
					"sodipodi:r1": true,
					"sodipodi:r2": true,
					"sodipodi:arg1": true,
					"sodipodi:arg2": true,
					"inkscape:flatsided": true,
					"inkscape:rounded": true,
					"inkscape:randomized": true,
					d: true,
					"inkscape:transform-center-x": true,
					"inkscape:transform-center-y": true,
					transform: true
				},
				1
			);

			children(path7).forEach(detach_dev);

			path8 = claim_element(
				g1_nodes,
				"path",
				{
					"sodipodi:type": true,
					style: true,
					id: true,
					"sodipodi:sides": true,
					"sodipodi:cx": true,
					"sodipodi:cy": true,
					"sodipodi:r1": true,
					"sodipodi:r2": true,
					"sodipodi:arg1": true,
					"sodipodi:arg2": true,
					"inkscape:flatsided": true,
					"inkscape:rounded": true,
					"inkscape:randomized": true,
					d: true,
					"inkscape:transform-center-x": true,
					"inkscape:transform-center-y": true,
					transform: true
				},
				1
			);

			children(path8).forEach(detach_dev);

			path9 = claim_element(
				g1_nodes,
				"path",
				{
					"sodipodi:type": true,
					style: true,
					id: true,
					"sodipodi:sides": true,
					"sodipodi:cx": true,
					"sodipodi:cy": true,
					"sodipodi:r1": true,
					"sodipodi:r2": true,
					"sodipodi:arg1": true,
					"sodipodi:arg2": true,
					"inkscape:flatsided": true,
					"inkscape:rounded": true,
					"inkscape:randomized": true,
					d: true,
					"inkscape:transform-center-x": true,
					"inkscape:transform-center-y": true,
					transform: true
				},
				1
			);

			children(path9).forEach(detach_dev);

			path10 = claim_element(
				g1_nodes,
				"path",
				{
					"sodipodi:type": true,
					style: true,
					id: true,
					"sodipodi:sides": true,
					"sodipodi:cx": true,
					"sodipodi:cy": true,
					"sodipodi:r1": true,
					"sodipodi:r2": true,
					"sodipodi:arg1": true,
					"sodipodi:arg2": true,
					"inkscape:flatsided": true,
					"inkscape:rounded": true,
					"inkscape:randomized": true,
					d: true,
					"inkscape:transform-center-x": true,
					"inkscape:transform-center-y": true,
					transform: true
				},
				1
			);

			children(path10).forEach(detach_dev);

			path11 = claim_element(
				g1_nodes,
				"path",
				{
					"sodipodi:type": true,
					style: true,
					id: true,
					"sodipodi:sides": true,
					"sodipodi:cx": true,
					"sodipodi:cy": true,
					"sodipodi:r1": true,
					"sodipodi:r2": true,
					"sodipodi:arg1": true,
					"sodipodi:arg2": true,
					"inkscape:flatsided": true,
					"inkscape:rounded": true,
					"inkscape:randomized": true,
					d: true,
					"inkscape:transform-center-x": true,
					"inkscape:transform-center-y": true,
					transform: true
				},
				1
			);

			children(path11).forEach(detach_dev);

			path12 = claim_element(
				g1_nodes,
				"path",
				{
					"sodipodi:type": true,
					style: true,
					id: true,
					"sodipodi:sides": true,
					"sodipodi:cx": true,
					"sodipodi:cy": true,
					"sodipodi:r1": true,
					"sodipodi:r2": true,
					"sodipodi:arg1": true,
					"sodipodi:arg2": true,
					"inkscape:flatsided": true,
					"inkscape:rounded": true,
					"inkscape:randomized": true,
					d: true,
					"inkscape:transform-center-x": true,
					"inkscape:transform-center-y": true,
					transform: true
				},
				1
			);

			children(path12).forEach(detach_dev);

			path13 = claim_element(
				g1_nodes,
				"path",
				{
					"sodipodi:type": true,
					style: true,
					id: true,
					"sodipodi:sides": true,
					"sodipodi:cx": true,
					"sodipodi:cy": true,
					"sodipodi:r1": true,
					"sodipodi:r2": true,
					"sodipodi:arg1": true,
					"sodipodi:arg2": true,
					"inkscape:flatsided": true,
					"inkscape:rounded": true,
					"inkscape:randomized": true,
					d: true,
					"inkscape:transform-center-x": true,
					"inkscape:transform-center-y": true,
					transform: true
				},
				1
			);

			children(path13).forEach(detach_dev);

			path14 = claim_element(
				g1_nodes,
				"path",
				{
					"sodipodi:type": true,
					style: true,
					id: true,
					"sodipodi:sides": true,
					"sodipodi:cx": true,
					"sodipodi:cy": true,
					"sodipodi:r1": true,
					"sodipodi:r2": true,
					"sodipodi:arg1": true,
					"sodipodi:arg2": true,
					"inkscape:flatsided": true,
					"inkscape:rounded": true,
					"inkscape:randomized": true,
					d: true,
					"inkscape:transform-center-x": true,
					"inkscape:transform-center-y": true,
					transform: true
				},
				1
			);

			children(path14).forEach(detach_dev);

			path15 = claim_element(
				g1_nodes,
				"path",
				{
					"sodipodi:type": true,
					style: true,
					id: true,
					"sodipodi:sides": true,
					"sodipodi:cx": true,
					"sodipodi:cy": true,
					"sodipodi:r1": true,
					"sodipodi:r2": true,
					"sodipodi:arg1": true,
					"sodipodi:arg2": true,
					"inkscape:flatsided": true,
					"inkscape:rounded": true,
					"inkscape:randomized": true,
					d: true,
					"inkscape:transform-center-x": true,
					"inkscape:transform-center-y": true,
					transform: true
				},
				1
			);

			children(path15).forEach(detach_dev);

			path16 = claim_element(
				g1_nodes,
				"path",
				{
					"sodipodi:type": true,
					style: true,
					id: true,
					"sodipodi:sides": true,
					"sodipodi:cx": true,
					"sodipodi:cy": true,
					"sodipodi:r1": true,
					"sodipodi:r2": true,
					"sodipodi:arg1": true,
					"sodipodi:arg2": true,
					"inkscape:flatsided": true,
					"inkscape:rounded": true,
					"inkscape:randomized": true,
					d: true,
					"inkscape:transform-center-x": true,
					"inkscape:transform-center-y": true,
					transform: true
				},
				1
			);

			children(path16).forEach(detach_dev);
			g1_nodes.forEach(detach_dev);

			g2 = claim_element(
				svg_nodes,
				"g",
				{
					"inkscape:groupmode": true,
					id: true,
					"inkscape:label": true,
					"sodipodi:insensitive": true,
					style: true,
					transform: true
				},
				1
			);

			var g2_nodes = children(g2);

			path17 = claim_element(
				g2_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					"sodipodi:nodetypes": true
				},
				1
			);

			children(path17).forEach(detach_dev);
			g2_nodes.forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			t1 = claim_space(div0_nodes);
			h2 = claim_element(div0_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t2 = claim_text(h2_nodes, "Nate Currit");
			h2_nodes.forEach(detach_dev);
			t3 = claim_space(div0_nodes);
			button = claim_element(div0_nodes, "BUTTON", { class: true });
			var button_nodes = children(button);
			t4 = claim_text(button_nodes, "Push me");
			button_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t5 = claim_space(nodes);
			div1 = claim_element(nodes, "DIV", { class: true });
			children(div1).forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Nate Currit";
			set_style(stop0, "stop-color", "#205e9b");
			set_style(stop0, "stop-opacity", "0.81999999");
			attr_dev(stop0, "offset", "0");
			attr_dev(stop0, "id", "stop882");
			add_location(stop0, file, 17, 16, 433);
			set_style(stop1, "stop-color", "#205e9b");
			set_style(stop1, "stop-opacity", "0");
			attr_dev(stop1, "offset", "1");
			attr_dev(stop1, "id", "stop884");
			add_location(stop1, file, 22, 16, 609);
			attr_dev(linearGradient, "inkscape:collect", "always");
			attr_dev(linearGradient, "id", "linearGradient886");
			add_location(linearGradient, file, 16, 12, 351);
			attr_dev(radialGradient, "inkscape:collect", "always");
			xlink_attr(radialGradient, "xlink:href", "#linearGradient886");
			attr_dev(radialGradient, "id", "radialGradient898");
			attr_dev(radialGradient, "cx", "254.22723");
			attr_dev(radialGradient, "cy", "440.79578");
			attr_dev(radialGradient, "fx", "254.22723");
			attr_dev(radialGradient, "fy", "440.79578");
			attr_dev(radialGradient, "r", "253.86066");
			attr_dev(radialGradient, "gradientTransform", "matrix(1.0550155,0,0,0.1907187,-13.900789,58.650278)");
			attr_dev(radialGradient, "gradientUnits", "userSpaceOnUse");
			add_location(radialGradient, file, 28, 12, 802);
			attr_dev(feGaussianBlur0, "stdDeviation", "0.45 0.44");
			attr_dev(feGaussianBlur0, "result", "fbSourceGraphic");
			attr_dev(feGaussianBlur0, "id", "feGaussianBlur1134");
			add_location(feGaussianBlur0, file, 44, 16, 1422);
			attr_dev(feColorMatrix0, "result", "fbSourceGraphicAlpha");
			attr_dev(feColorMatrix0, "in", "fbSourceGraphic");
			attr_dev(feColorMatrix0, "values", "0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0");
			attr_dev(feColorMatrix0, "id", "feColorMatrix3753");
			add_location(feColorMatrix0, file, 49, 16, 1607);
			attr_dev(feColorMatrix1, "id", "feColorMatrix3755");
			attr_dev(feColorMatrix1, "values", "8.76841 -6.75528 -6.75528 0 5.54683 -6.75528 8.76841 -6.75528 0 5.54683 -6.75528 -6.75528 8.76841 0 5.54683 0 0 0 1 0 ");
			attr_dev(feColorMatrix1, "in", "fbSourceGraphic");
			add_location(feColorMatrix1, file, 55, 16, 1863);
			set_style(filter0, "color-interpolation-filters", "sRGB");
			attr_dev(filter0, "inkscape:label", "Brilliance");
			attr_dev(filter0, "id", "filter1136");
			add_location(filter0, file, 40, 12, 1264);
			attr_dev(feGaussianBlur1, "inkscape:collect", "always");
			attr_dev(feGaussianBlur1, "stdDeviation", "0.55294173");
			attr_dev(feGaussianBlur1, "id", "feGaussianBlur3315");
			add_location(feGaussianBlur1, file, 69, 16, 2450);
			attr_dev(filter1, "inkscape:collect", "always");
			set_style(filter1, "color-interpolation-filters", "sRGB");
			attr_dev(filter1, "id", "filter3313");
			attr_dev(filter1, "x", "-0.21693797");
			attr_dev(filter1, "width", "1.433876");
			attr_dev(filter1, "y", "-0.21693797");
			attr_dev(filter1, "height", "1.433876");
			add_location(filter1, file, 61, 12, 2163);
			attr_dev(feGaussianBlur2, "inkscape:collect", "always");
			attr_dev(feGaussianBlur2, "stdDeviation", "0.59093186");
			attr_dev(feGaussianBlur2, "id", "feGaussianBlur3403");
			add_location(feGaussianBlur2, file, 83, 16, 2944);
			attr_dev(filter2, "inkscape:collect", "always");
			set_style(filter2, "color-interpolation-filters", "sRGB");
			attr_dev(filter2, "id", "filter3401");
			attr_dev(filter2, "x", "-0.23184282");
			attr_dev(filter2, "width", "1.4636856");
			attr_dev(filter2, "y", "-0.23184282");
			attr_dev(filter2, "height", "1.4636856");
			add_location(filter2, file, 75, 12, 2655);
			attr_dev(feGaussianBlur3, "inkscape:collect", "always");
			attr_dev(feGaussianBlur3, "stdDeviation", "0.56415456");
			attr_dev(feGaussianBlur3, "id", "feGaussianBlur3455");
			add_location(feGaussianBlur3, file, 97, 16, 3438);
			attr_dev(filter3, "inkscape:collect", "always");
			set_style(filter3, "color-interpolation-filters", "sRGB");
			attr_dev(filter3, "id", "filter3453");
			attr_dev(filter3, "x", "-0.22133715");
			attr_dev(filter3, "width", "1.4426743");
			attr_dev(filter3, "y", "-0.22133715");
			attr_dev(filter3, "height", "1.4426743");
			add_location(filter3, file, 89, 12, 3149);
			attr_dev(feGaussianBlur4, "inkscape:collect", "always");
			attr_dev(feGaussianBlur4, "stdDeviation", "0.614099");
			attr_dev(feGaussianBlur4, "id", "feGaussianBlur3507");
			add_location(feGaussianBlur4, file, 111, 16, 3932);
			attr_dev(filter4, "inkscape:collect", "always");
			set_style(filter4, "color-interpolation-filters", "sRGB");
			attr_dev(filter4, "id", "filter3505");
			attr_dev(filter4, "x", "-0.24093208");
			attr_dev(filter4, "width", "1.4818641");
			attr_dev(filter4, "y", "-0.24093208");
			attr_dev(filter4, "height", "1.4818641");
			add_location(filter4, file, 103, 12, 3643);
			attr_dev(feGaussianBlur5, "inkscape:collect", "always");
			attr_dev(feGaussianBlur5, "stdDeviation", "0.52894758");
			attr_dev(feGaussianBlur5, "id", "feGaussianBlur3539");
			add_location(feGaussianBlur5, file, 125, 16, 4424);
			attr_dev(filter5, "inkscape:collect", "always");
			set_style(filter5, "color-interpolation-filters", "sRGB");
			attr_dev(filter5, "id", "filter3537");
			attr_dev(filter5, "x", "-0.20752425");
			attr_dev(filter5, "width", "1.4150485");
			attr_dev(filter5, "y", "-0.20752425");
			attr_dev(filter5, "height", "1.4150485");
			add_location(filter5, file, 117, 12, 4135);
			attr_dev(feGaussianBlur6, "inkscape:collect", "always");
			attr_dev(feGaussianBlur6, "stdDeviation", "0.57192042");
			attr_dev(feGaussianBlur6, "id", "feGaussianBlur3587");
			add_location(feGaussianBlur6, file, 139, 16, 4918);
			attr_dev(filter6, "inkscape:collect", "always");
			set_style(filter6, "color-interpolation-filters", "sRGB");
			attr_dev(filter6, "id", "filter3585");
			attr_dev(filter6, "x", "-0.22438397");
			attr_dev(filter6, "width", "1.4487679");
			attr_dev(filter6, "y", "-0.22438397");
			attr_dev(filter6, "height", "1.4487679");
			add_location(filter6, file, 131, 12, 4629);
			attr_dev(feGaussianBlur7, "inkscape:collect", "always");
			attr_dev(feGaussianBlur7, "stdDeviation", "0.59876688");
			attr_dev(feGaussianBlur7, "id", "feGaussianBlur3659");
			add_location(feGaussianBlur7, file, 153, 16, 5412);
			attr_dev(filter7, "inkscape:collect", "always");
			set_style(filter7, "color-interpolation-filters", "sRGB");
			attr_dev(filter7, "id", "filter3657");
			attr_dev(filter7, "x", "-0.23491676");
			attr_dev(filter7, "width", "1.4698335");
			attr_dev(filter7, "y", "-0.23491676");
			attr_dev(filter7, "height", "1.4698335");
			add_location(filter7, file, 145, 12, 5123);
			attr_dev(feGaussianBlur8, "inkscape:collect", "always");
			attr_dev(feGaussianBlur8, "stdDeviation", "0.55486474");
			attr_dev(feGaussianBlur8, "id", "feGaussianBlur3711");
			add_location(feGaussianBlur8, file, 167, 16, 5906);
			attr_dev(filter8, "inkscape:collect", "always");
			set_style(filter8, "color-interpolation-filters", "sRGB");
			attr_dev(filter8, "id", "filter3709");
			attr_dev(filter8, "x", "-0.21769245");
			attr_dev(filter8, "width", "1.4353849");
			attr_dev(filter8, "y", "-0.21769245");
			attr_dev(filter8, "height", "1.4353849");
			add_location(filter8, file, 159, 12, 5617);
			attr_dev(feGaussianBlur9, "inkscape:collect", "always");
			attr_dev(feGaussianBlur9, "stdDeviation", "0.52505185");
			attr_dev(feGaussianBlur9, "id", "feGaussianBlur3939");
			add_location(feGaussianBlur9, file, 181, 16, 6403);
			attr_dev(filter9, "inkscape:collect", "always");
			set_style(filter9, "color-interpolation-filters", "sRGB");
			attr_dev(filter9, "id", "filter3937");
			attr_dev(filter9, "x", "-0.0027724537");
			attr_dev(filter9, "width", "1.0055449");
			attr_dev(filter9, "y", "-0.012241655");
			attr_dev(filter9, "height", "1.0244833");
			add_location(filter9, file, 173, 12, 6111);
			attr_dev(defs, "id", "defs2");
			add_location(defs, file, 15, 8, 321);
			attr_dev(sodipodi_namedview, "id", "base");
			attr_dev(sodipodi_namedview, "pagecolor", "#ffffff");
			attr_dev(sodipodi_namedview, "bordercolor", "#666666");
			attr_dev(sodipodi_namedview, "borderopacity", "1.0");
			attr_dev(sodipodi_namedview, "inkscape:pageopacity", "0.0");
			attr_dev(sodipodi_namedview, "inkscape:pageshadow", "2");
			attr_dev(sodipodi_namedview, "inkscape:zoom", "0.44737828");
			attr_dev(sodipodi_namedview, "inkscape:cx", "561.56864");
			attr_dev(sodipodi_namedview, "inkscape:cy", "725.71841");
			attr_dev(sodipodi_namedview, "inkscape:document-units", "mm");
			attr_dev(sodipodi_namedview, "inkscape:current-layer", "layer1");
			attr_dev(sodipodi_namedview, "inkscape:document-rotation", "0");
			attr_dev(sodipodi_namedview, "showgrid", "false");
			attr_dev(sodipodi_namedview, "units", "px");
			attr_dev(sodipodi_namedview, "inkscape:window-width", "1904");
			attr_dev(sodipodi_namedview, "inkscape:window-height", "1027");
			attr_dev(sodipodi_namedview, "inkscape:window-x", "8");
			attr_dev(sodipodi_namedview, "inkscape:window-y", "8");
			attr_dev(sodipodi_namedview, "inkscape:window-maximized", "0");
			attr_dev(sodipodi_namedview, "inkscape:snap-midpoints", "true");
			attr_dev(sodipodi_namedview, "showguides", "true");
			attr_dev(sodipodi_namedview, "inkscape:guide-bbox", "true");
			attr_dev(sodipodi_namedview, "fit-margin-top", "0");
			attr_dev(sodipodi_namedview, "fit-margin-left", "0");
			attr_dev(sodipodi_namedview, "fit-margin-right", "0");
			attr_dev(sodipodi_namedview, "fit-margin-bottom", "0");
			add_location(sodipodi_namedview, file, 188, 8, 6620);
			attr_dev(path0, "id", "path857");
			set_style(path0, "opacity", "0.997");
			set_style(path0, "fill", "#3d2c4a");
			set_style(path0, "fill-opacity", "1");
			set_style(path0, "stroke-width", "2.26657");
			set_style(path0, "stroke-linecap", "round");
			set_style(path0, "stroke-dasharray", "18.1326, 18.1326");
			attr_dev(path0, "d", "M 0.03710937,0.15039062 V 1079.6816 H 1919.8145 V 0.15039062 Z");
			attr_dev(path0, "transform", "scale(0.26458333)");
			add_location(path0, file, 222, 12, 7793);
			attr_dev(g0, "inkscape:label", "background");
			attr_dev(g0, "inkscape:groupmode", "layer");
			attr_dev(g0, "id", "layer1");
			set_style(g0, "display", "inline");
			attr_dev(g0, "transform", "translate(-0.00981852,-0.03979085)");
			add_location(g0, file, 216, 8, 7580);
			attr_dev(path1, "sodipodi:type", "star");
			set_style(path1, "opacity", "0.997");
			set_style(path1, "fill", "#ffdd36");
			set_style(path1, "fill-opacity", "1");
			set_style(path1, "stroke", "none");
			set_style(path1, "stroke-width", "1.165");
			set_style(path1, "stroke-linecap", "round");
			set_style(path1, "stroke-miterlimit", "4");
			set_style(path1, "stroke-dasharray", "none");
			set_style(path1, "filter", "url(#filter1136)");
			attr_dev(path1, "id", "path900");
			attr_dev(path1, "sodipodi:sides", "8");
			attr_dev(path1, "sodipodi:cx", "25.635633");
			attr_dev(path1, "sodipodi:cy", "40.830368");
			attr_dev(path1, "sodipodi:r1", "0.71830338");
			attr_dev(path1, "sodipodi:r2", "3.0648906");
			attr_dev(path1, "sodipodi:arg1", "1.8994983");
			attr_dev(path1, "sodipodi:arg2", "2.2921974");
			attr_dev(path1, "inkscape:flatsided", "false");
			attr_dev(path1, "inkscape:rounded", "0");
			attr_dev(path1, "inkscape:randomized", "0");
			attr_dev(path1, "d", "m 25.403755,41.510215 -1.79229,1.621522 1.379481,-1.984608 -2.413929,-0.120751 2.378769,-0.427889 -1.621521,-1.792289 1.984607,1.37948 0.120751,-2.413928 0.427889,2.378769 1.79229,-1.621522 -1.379481,1.984608 2.413929,0.120751 -2.37877,0.427889 1.621522,1.792289 -1.984607,-1.37948 -0.120751,2.413928 z");
			attr_dev(path1, "inkscape:transform-center-x", "-0.24780148");
			attr_dev(path1, "inkscape:transform-center-y", "-0.012727245");
			attr_dev(path1, "transform", "matrix(1.3644521,0,0,1.3050169,11.735458,-5.369781)");
			add_location(path1, file, 236, 12, 8407);
			attr_dev(path2, "sodipodi:type", "star");
			set_style(path2, "opacity", "0.997");
			set_style(path2, "fill", "#ffdd36");
			set_style(path2, "fill-opacity", "1");
			set_style(path2, "stroke", "none");
			set_style(path2, "stroke-width", "1.165");
			set_style(path2, "stroke-linecap", "round");
			set_style(path2, "stroke-miterlimit", "4");
			set_style(path2, "stroke-dasharray", "none");
			set_style(path2, "filter", "url(#filter1136)");
			attr_dev(path2, "id", "path1142");
			attr_dev(path2, "sodipodi:sides", "8");
			attr_dev(path2, "sodipodi:cx", "25.635633");
			attr_dev(path2, "sodipodi:cy", "40.830368");
			attr_dev(path2, "sodipodi:r1", "0.71830338");
			attr_dev(path2, "sodipodi:r2", "3.0648906");
			attr_dev(path2, "sodipodi:arg1", "1.8994983");
			attr_dev(path2, "sodipodi:arg2", "2.2921974");
			attr_dev(path2, "inkscape:flatsided", "false");
			attr_dev(path2, "inkscape:rounded", "0");
			attr_dev(path2, "inkscape:randomized", "0");
			attr_dev(path2, "d", "m 25.403755,41.510215 -1.79229,1.621522 1.379481,-1.984608 -2.413929,-0.120751 2.378769,-0.427889 -1.621521,-1.792289 1.984607,1.37948 0.120751,-2.413928 0.427889,2.378769 1.79229,-1.621522 -1.379481,1.984608 2.413929,0.120751 -2.37877,0.427889 1.621522,1.792289 -1.984607,-1.37948 -0.120751,2.413928 z");
			attr_dev(path2, "inkscape:transform-center-x", "-0.24780148");
			attr_dev(path2, "inkscape:transform-center-y", "-0.012727245");
			attr_dev(path2, "transform", "matrix(1.3644521,0,0,1.3050169,43.987886,-36.700693)");
			add_location(path2, file, 255, 12, 9610);
			attr_dev(path3, "sodipodi:type", "star");
			set_style(path3, "opacity", "0.997");
			set_style(path3, "fill", "#ffe255");
			set_style(path3, "fill-opacity", "0.64817");
			set_style(path3, "stroke", "none");
			set_style(path3, "stroke-width", "1.165");
			set_style(path3, "stroke-linecap", "round");
			set_style(path3, "stroke-miterlimit", "4");
			set_style(path3, "stroke-dasharray", "none");
			set_style(path3, "filter", "url(#filter3453)");
			attr_dev(path3, "id", "path1144");
			attr_dev(path3, "sodipodi:sides", "8");
			attr_dev(path3, "sodipodi:cx", "25.635633");
			attr_dev(path3, "sodipodi:cy", "40.830368");
			attr_dev(path3, "sodipodi:r1", "0.71830338");
			attr_dev(path3, "sodipodi:r2", "3.0648906");
			attr_dev(path3, "sodipodi:arg1", "1.8994983");
			attr_dev(path3, "sodipodi:arg2", "2.2921974");
			attr_dev(path3, "inkscape:flatsided", "false");
			attr_dev(path3, "inkscape:rounded", "0");
			attr_dev(path3, "inkscape:randomized", "0");
			attr_dev(path3, "d", "m 25.403755,41.510215 -1.79229,1.621522 1.379481,-1.984608 -2.413929,-0.120751 2.378769,-0.427889 -1.621521,-1.792289 1.984607,1.37948 0.120751,-2.413928 0.427889,2.378769 1.79229,-1.621522 -1.379481,1.984608 2.413929,0.120751 -2.37877,0.427889 1.621522,1.792289 -1.984607,-1.37948 -0.120751,2.413928 z");
			attr_dev(path3, "inkscape:transform-center-x", "-0.24780148");
			attr_dev(path3, "inkscape:transform-center-y", "-0.012727245");
			attr_dev(path3, "transform", "matrix(1.3644521,0,0,1.3050169,-4.0674139,37.424662)");
			add_location(path3, file, 274, 12, 10815);
			attr_dev(path4, "sodipodi:type", "star");
			set_style(path4, "opacity", "0.997");
			set_style(path4, "fill", "#ffdd36");
			set_style(path4, "fill-opacity", "1");
			set_style(path4, "stroke", "none");
			set_style(path4, "stroke-width", "1.165");
			set_style(path4, "stroke-linecap", "round");
			set_style(path4, "stroke-miterlimit", "4");
			set_style(path4, "stroke-dasharray", "none");
			set_style(path4, "filter", "url(#filter1136)");
			attr_dev(path4, "id", "path1146");
			attr_dev(path4, "sodipodi:sides", "8");
			attr_dev(path4, "sodipodi:cx", "25.635633");
			attr_dev(path4, "sodipodi:cy", "40.830368");
			attr_dev(path4, "sodipodi:r1", "0.71830338");
			attr_dev(path4, "sodipodi:r2", "3.0648906");
			attr_dev(path4, "sodipodi:arg1", "1.8994983");
			attr_dev(path4, "sodipodi:arg2", "2.2921974");
			attr_dev(path4, "inkscape:flatsided", "false");
			attr_dev(path4, "inkscape:rounded", "0");
			attr_dev(path4, "inkscape:randomized", "0");
			attr_dev(path4, "d", "m 25.403755,41.510215 -1.79229,1.621522 1.379481,-1.984608 -2.413929,-0.120751 2.378769,-0.427889 -1.621521,-1.792289 1.984607,1.37948 0.120751,-2.413928 0.427889,2.378769 1.79229,-1.621522 -1.379481,1.984608 2.413929,0.120751 -2.37877,0.427889 1.621522,1.792289 -1.984607,-1.37948 -0.120751,2.413928 z");
			attr_dev(path4, "inkscape:transform-center-x", "-0.24780148");
			attr_dev(path4, "inkscape:transform-center-y", "-0.012727245");
			attr_dev(path4, "transform", "matrix(1.3644521,0,0,1.3050169,310.88623,-45.44488)");
			add_location(path4, file, 293, 12, 12026);
			attr_dev(path5, "sodipodi:type", "star");
			set_style(path5, "opacity", "0.997");
			set_style(path5, "fill", "#ffd21e");
			set_style(path5, "fill-opacity", "0.740363");
			set_style(path5, "stroke", "none");
			set_style(path5, "stroke-width", "1.165");
			set_style(path5, "stroke-linecap", "round");
			set_style(path5, "stroke-miterlimit", "4");
			set_style(path5, "stroke-dasharray", "none");
			set_style(path5, "filter", "url(#filter3709)");
			attr_dev(path5, "id", "path1148");
			attr_dev(path5, "sodipodi:sides", "8");
			attr_dev(path5, "sodipodi:cx", "25.635633");
			attr_dev(path5, "sodipodi:cy", "40.830368");
			attr_dev(path5, "sodipodi:r1", "0.71830338");
			attr_dev(path5, "sodipodi:r2", "3.0648906");
			attr_dev(path5, "sodipodi:arg1", "1.8994983");
			attr_dev(path5, "sodipodi:arg2", "2.2921974");
			attr_dev(path5, "inkscape:flatsided", "false");
			attr_dev(path5, "inkscape:rounded", "0");
			attr_dev(path5, "inkscape:randomized", "0");
			attr_dev(path5, "d", "m 25.403755,41.510215 -1.79229,1.621522 1.379481,-1.984608 -2.413929,-0.120751 2.378769,-0.427889 -1.621521,-1.792289 1.984607,1.37948 0.120751,-2.413928 0.427889,2.378769 1.79229,-1.621522 -1.379481,1.984608 2.413929,0.120751 -2.37877,0.427889 1.621522,1.792289 -1.984607,-1.37948 -0.120751,2.413928 z");
			attr_dev(path5, "inkscape:transform-center-x", "-0.24780148");
			attr_dev(path5, "inkscape:transform-center-y", "-0.012727245");
			attr_dev(path5, "transform", "matrix(1.3644521,0,0,1.3050169,82.121099,16.257116)");
			add_location(path5, file, 312, 12, 13230);
			attr_dev(path6, "sodipodi:type", "star");
			set_style(path6, "opacity", "0.997");
			set_style(path6, "fill", "#c87137");
			set_style(path6, "fill-opacity", "1");
			set_style(path6, "stroke", "none");
			set_style(path6, "stroke-width", "1.165");
			set_style(path6, "stroke-linecap", "round");
			set_style(path6, "stroke-miterlimit", "4");
			set_style(path6, "stroke-dasharray", "none");
			set_style(path6, "filter", "url(#filter1136)");
			attr_dev(path6, "id", "path1150");
			attr_dev(path6, "sodipodi:sides", "8");
			attr_dev(path6, "sodipodi:cx", "25.635633");
			attr_dev(path6, "sodipodi:cy", "40.830368");
			attr_dev(path6, "sodipodi:r1", "0.71830338");
			attr_dev(path6, "sodipodi:r2", "3.0648906");
			attr_dev(path6, "sodipodi:arg1", "1.8994983");
			attr_dev(path6, "sodipodi:arg2", "2.2921974");
			attr_dev(path6, "inkscape:flatsided", "false");
			attr_dev(path6, "inkscape:rounded", "0");
			attr_dev(path6, "inkscape:randomized", "0");
			attr_dev(path6, "d", "m 25.403755,41.510215 -1.79229,1.621522 1.379481,-1.984608 -2.413929,-0.120751 2.378769,-0.427889 -1.621521,-1.792289 1.984607,1.37948 0.120751,-2.413928 0.427889,2.378769 1.79229,-1.621522 -1.379481,1.984608 2.413929,0.120751 -2.37877,0.427889 1.621522,1.792289 -1.984607,-1.37948 -0.120751,2.413928 z");
			attr_dev(path6, "inkscape:transform-center-x", "-0.24780148");
			attr_dev(path6, "inkscape:transform-center-y", "-0.012727245");
			attr_dev(path6, "transform", "matrix(1.3644521,0,0,1.3050169,143.0521,-27.716071)");
			add_location(path6, file, 331, 12, 14441);
			attr_dev(path7, "sodipodi:type", "star");
			set_style(path7, "opacity", "0.997");
			set_style(path7, "fill", "#dcb16a");
			set_style(path7, "fill-opacity", "1");
			set_style(path7, "stroke", "none");
			set_style(path7, "stroke-width", "1.165");
			set_style(path7, "stroke-linecap", "round");
			set_style(path7, "stroke-miterlimit", "4");
			set_style(path7, "stroke-dasharray", "none");
			set_style(path7, "filter", "url(#filter1136)");
			attr_dev(path7, "id", "path1152");
			attr_dev(path7, "sodipodi:sides", "8");
			attr_dev(path7, "sodipodi:cx", "25.635633");
			attr_dev(path7, "sodipodi:cy", "40.830368");
			attr_dev(path7, "sodipodi:r1", "0.71830338");
			attr_dev(path7, "sodipodi:r2", "3.0648906");
			attr_dev(path7, "sodipodi:arg1", "1.8994983");
			attr_dev(path7, "sodipodi:arg2", "2.2921974");
			attr_dev(path7, "inkscape:flatsided", "false");
			attr_dev(path7, "inkscape:rounded", "0");
			attr_dev(path7, "inkscape:randomized", "0");
			attr_dev(path7, "d", "m 25.403755,41.510215 -1.79229,1.621522 1.379481,-1.984608 -2.413929,-0.120751 2.378769,-0.427889 -1.621521,-1.792289 1.984607,1.37948 0.120751,-2.413928 0.427889,2.378769 1.79229,-1.621522 -1.379481,1.984608 2.413929,0.120751 -2.37877,0.427889 1.621522,1.792289 -1.984607,-1.37948 -0.120751,2.413928 z");
			attr_dev(path7, "inkscape:transform-center-x", "-0.24780148");
			attr_dev(path7, "inkscape:transform-center-y", "-0.012727245");
			attr_dev(path7, "transform", "matrix(1.3644521,0,0,1.3050169,425.82559,-36.9048)");
			add_location(path7, file, 350, 12, 15645);
			attr_dev(path8, "sodipodi:type", "star");
			set_style(path8, "opacity", "0.997");
			set_style(path8, "fill", "#cbb641");
			set_style(path8, "fill-opacity", "0.651037");
			set_style(path8, "stroke", "none");
			set_style(path8, "stroke-width", "1.165");
			set_style(path8, "stroke-linecap", "round");
			set_style(path8, "stroke-miterlimit", "4");
			set_style(path8, "stroke-dasharray", "none");
			set_style(path8, "filter", "url(#filter3401)");
			attr_dev(path8, "id", "path1154");
			attr_dev(path8, "sodipodi:sides", "8");
			attr_dev(path8, "sodipodi:cx", "25.635633");
			attr_dev(path8, "sodipodi:cy", "40.830368");
			attr_dev(path8, "sodipodi:r1", "0.71830338");
			attr_dev(path8, "sodipodi:r2", "3.0648906");
			attr_dev(path8, "sodipodi:arg1", "1.8994983");
			attr_dev(path8, "sodipodi:arg2", "2.2921974");
			attr_dev(path8, "inkscape:flatsided", "false");
			attr_dev(path8, "inkscape:rounded", "0");
			attr_dev(path8, "inkscape:randomized", "0");
			attr_dev(path8, "d", "m 25.403755,41.510215 -1.79229,1.621522 1.379481,-1.984608 -2.413929,-0.120751 2.378769,-0.427889 -1.621521,-1.792289 1.984607,1.37948 0.120751,-2.413928 0.427889,2.378769 1.79229,-1.621522 -1.379481,1.984608 2.413929,0.120751 -2.37877,0.427889 1.621522,1.792289 -1.984607,-1.37948 -0.120751,2.413928 z");
			attr_dev(path8, "inkscape:transform-center-x", "-0.24780148");
			attr_dev(path8, "inkscape:transform-center-y", "-0.012727245");
			attr_dev(path8, "transform", "matrix(1.3644521,0,0,1.3050169,140.54117,49.509449)");
			add_location(path8, file, 369, 12, 16848);
			attr_dev(path9, "sodipodi:type", "star");
			set_style(path9, "opacity", "0.997");
			set_style(path9, "fill", "#ffdd36");
			set_style(path9, "fill-opacity", "0.764033");
			set_style(path9, "stroke", "none");
			set_style(path9, "stroke-width", "1.165");
			set_style(path9, "stroke-linecap", "round");
			set_style(path9, "stroke-miterlimit", "4");
			set_style(path9, "stroke-dasharray", "none");
			set_style(path9, "filter", "url(#filter3657)");
			attr_dev(path9, "id", "path1156");
			attr_dev(path9, "sodipodi:sides", "8");
			attr_dev(path9, "sodipodi:cx", "25.635633");
			attr_dev(path9, "sodipodi:cy", "40.830368");
			attr_dev(path9, "sodipodi:r1", "0.71830338");
			attr_dev(path9, "sodipodi:r2", "3.0648906");
			attr_dev(path9, "sodipodi:arg1", "1.8994983");
			attr_dev(path9, "sodipodi:arg2", "2.2921974");
			attr_dev(path9, "inkscape:flatsided", "false");
			attr_dev(path9, "inkscape:rounded", "0");
			attr_dev(path9, "inkscape:randomized", "0");
			attr_dev(path9, "d", "m 25.403755,41.510215 -1.79229,1.621522 1.379481,-1.984608 -2.413929,-0.120751 2.378769,-0.427889 -1.621521,-1.792289 1.984607,1.37948 0.120751,-2.413928 0.427889,2.378769 1.79229,-1.621522 -1.379481,1.984608 2.413929,0.120751 -2.37877,0.427889 1.621522,1.792289 -1.984607,-1.37948 -0.120751,2.413928 z");
			attr_dev(path9, "inkscape:transform-center-x", "-0.24780148");
			attr_dev(path9, "inkscape:transform-center-y", "-0.012727245");
			attr_dev(path9, "transform", "matrix(1.3644521,0,0,1.3050169,177.41212,6.2169484)");
			add_location(path9, file, 388, 12, 18059);
			attr_dev(path10, "sodipodi:type", "star");
			set_style(path10, "opacity", "0.997");
			set_style(path10, "fill", "#ffe460");
			set_style(path10, "fill-opacity", "0.585435");
			set_style(path10, "stroke", "none");
			set_style(path10, "stroke-width", "1.165");
			set_style(path10, "stroke-linecap", "round");
			set_style(path10, "stroke-miterlimit", "4");
			set_style(path10, "stroke-dasharray", "none");
			set_style(path10, "filter", "url(#filter1136)");
			attr_dev(path10, "id", "path1158");
			attr_dev(path10, "sodipodi:sides", "8");
			attr_dev(path10, "sodipodi:cx", "25.635633");
			attr_dev(path10, "sodipodi:cy", "40.830368");
			attr_dev(path10, "sodipodi:r1", "0.71830338");
			attr_dev(path10, "sodipodi:r2", "3.0648906");
			attr_dev(path10, "sodipodi:arg1", "1.8994983");
			attr_dev(path10, "sodipodi:arg2", "2.2921974");
			attr_dev(path10, "inkscape:flatsided", "false");
			attr_dev(path10, "inkscape:rounded", "0");
			attr_dev(path10, "inkscape:randomized", "0");
			attr_dev(path10, "d", "m 25.403755,41.510215 -1.79229,1.621522 1.379481,-1.984608 -2.413929,-0.120751 2.378769,-0.427889 -1.621521,-1.792289 1.984607,1.37948 0.120751,-2.413928 0.427889,2.378769 1.79229,-1.621522 -1.379481,1.984608 2.413929,0.120751 -2.37877,0.427889 1.621522,1.792289 -1.984607,-1.37948 -0.120751,2.413928 z");
			attr_dev(path10, "inkscape:transform-center-x", "-0.24780148");
			attr_dev(path10, "inkscape:transform-center-y", "-0.012727245");
			attr_dev(path10, "transform", "matrix(1.3644521,0,0,1.3050169,259.73598,30.036263)");
			add_location(path10, file, 407, 12, 19270);
			attr_dev(path11, "sodipodi:type", "star");
			set_style(path11, "opacity", "0.997");
			set_style(path11, "fill", "#ffdd36");
			set_style(path11, "fill-opacity", "1");
			set_style(path11, "stroke", "none");
			set_style(path11, "stroke-width", "1.165");
			set_style(path11, "stroke-linecap", "round");
			set_style(path11, "stroke-miterlimit", "4");
			set_style(path11, "stroke-dasharray", "none");
			set_style(path11, "filter", "url(#filter1136)");
			attr_dev(path11, "id", "path1160");
			attr_dev(path11, "sodipodi:sides", "8");
			attr_dev(path11, "sodipodi:cx", "25.635633");
			attr_dev(path11, "sodipodi:cy", "40.830368");
			attr_dev(path11, "sodipodi:r1", "0.71830338");
			attr_dev(path11, "sodipodi:r2", "3.0648906");
			attr_dev(path11, "sodipodi:arg1", "1.8994983");
			attr_dev(path11, "sodipodi:arg2", "2.2921974");
			attr_dev(path11, "inkscape:flatsided", "false");
			attr_dev(path11, "inkscape:rounded", "0");
			attr_dev(path11, "inkscape:randomized", "0");
			attr_dev(path11, "d", "m 25.403755,41.510215 -1.79229,1.621522 1.379481,-1.984608 -2.413929,-0.120751 2.378769,-0.427889 -1.621521,-1.792289 1.984607,1.37948 0.120751,-2.413928 0.427889,2.378769 1.79229,-1.621522 -1.379481,1.984608 2.413929,0.120751 -2.37877,0.427889 1.621522,1.792289 -1.984607,-1.37948 -0.120751,2.413928 z");
			attr_dev(path11, "inkscape:transform-center-x", "-0.24780148");
			attr_dev(path11, "inkscape:transform-center-y", "-0.012727245");
			attr_dev(path11, "transform", "matrix(1.3644521,0,0,1.3050169,217.09985,-18.124723)");
			add_location(path11, file, 426, 12, 20481);
			attr_dev(path12, "sodipodi:type", "star");
			set_style(path12, "opacity", "0.997");
			set_style(path12, "fill", "#ffdd36");
			set_style(path12, "fill-opacity", "1");
			set_style(path12, "stroke", "none");
			set_style(path12, "stroke-width", "1.165");
			set_style(path12, "stroke-linecap", "round");
			set_style(path12, "stroke-miterlimit", "4");
			set_style(path12, "stroke-dasharray", "none");
			set_style(path12, "filter", "url(#filter3585)");
			attr_dev(path12, "id", "path1162");
			attr_dev(path12, "sodipodi:sides", "8");
			attr_dev(path12, "sodipodi:cx", "25.635633");
			attr_dev(path12, "sodipodi:cy", "40.830368");
			attr_dev(path12, "sodipodi:r1", "0.71830338");
			attr_dev(path12, "sodipodi:r2", "3.0648906");
			attr_dev(path12, "sodipodi:arg1", "1.8994983");
			attr_dev(path12, "sodipodi:arg2", "2.2921974");
			attr_dev(path12, "inkscape:flatsided", "false");
			attr_dev(path12, "inkscape:rounded", "0");
			attr_dev(path12, "inkscape:randomized", "0");
			attr_dev(path12, "d", "m 25.403755,41.510215 -1.79229,1.621522 1.379481,-1.984608 -2.413929,-0.120751 2.378769,-0.427889 -1.621521,-1.792289 1.984607,1.37948 0.120751,-2.413928 0.427889,2.378769 1.79229,-1.621522 -1.379481,1.984608 2.413929,0.120751 -2.37877,0.427889 1.621522,1.792289 -1.984607,-1.37948 -0.120751,2.413928 z");
			attr_dev(path12, "inkscape:transform-center-x", "-0.24780148");
			attr_dev(path12, "inkscape:transform-center-y", "-0.012727245");
			attr_dev(path12, "transform", "matrix(1.3644521,0,0,1.3050169,265.8998,-25.094041)");
			add_location(path12, file, 445, 12, 21686);
			attr_dev(path13, "sodipodi:type", "star");
			set_style(path13, "opacity", "0.997");
			set_style(path13, "fill", "#ffe566");
			set_style(path13, "fill-opacity", "0.625869");
			set_style(path13, "stroke", "none");
			set_style(path13, "stroke-width", "1.165");
			set_style(path13, "stroke-linecap", "round");
			set_style(path13, "stroke-miterlimit", "4");
			set_style(path13, "stroke-dasharray", "none");
			set_style(path13, "filter", "url(#filter3313)");
			attr_dev(path13, "id", "path1164");
			attr_dev(path13, "sodipodi:sides", "8");
			attr_dev(path13, "sodipodi:cx", "25.635633");
			attr_dev(path13, "sodipodi:cy", "40.830368");
			attr_dev(path13, "sodipodi:r1", "0.71830338");
			attr_dev(path13, "sodipodi:r2", "3.0648906");
			attr_dev(path13, "sodipodi:arg1", "1.8994983");
			attr_dev(path13, "sodipodi:arg2", "2.2921974");
			attr_dev(path13, "inkscape:flatsided", "false");
			attr_dev(path13, "inkscape:rounded", "0");
			attr_dev(path13, "inkscape:randomized", "0");
			attr_dev(path13, "d", "m 25.403755,41.510215 -1.79229,1.621522 1.379481,-1.984608 -2.413929,-0.120751 2.378769,-0.427889 -1.621521,-1.792289 1.984607,1.37948 0.120751,-2.413928 0.427889,2.378769 1.79229,-1.621522 -1.379481,1.984608 2.413929,0.120751 -2.37877,0.427889 1.621522,1.792289 -1.984607,-1.37948 -0.120751,2.413928 z");
			attr_dev(path13, "inkscape:transform-center-x", "-0.24780148");
			attr_dev(path13, "inkscape:transform-center-y", "-0.012727245");
			attr_dev(path13, "transform", "matrix(1.3644521,0,0,1.3050169,415.81603,44.822788)");
			add_location(path13, file, 464, 12, 22890);
			attr_dev(path14, "sodipodi:type", "star");
			set_style(path14, "opacity", "0.997");
			set_style(path14, "fill", "#ffdd36");
			set_style(path14, "fill-opacity", "1");
			set_style(path14, "stroke", "none");
			set_style(path14, "stroke-width", "1.165");
			set_style(path14, "stroke-linecap", "round");
			set_style(path14, "stroke-miterlimit", "4");
			set_style(path14, "stroke-dasharray", "none");
			set_style(path14, "filter", "url(#filter1136)");
			attr_dev(path14, "id", "path1166");
			attr_dev(path14, "sodipodi:sides", "8");
			attr_dev(path14, "sodipodi:cx", "25.635633");
			attr_dev(path14, "sodipodi:cy", "40.830368");
			attr_dev(path14, "sodipodi:r1", "0.71830338");
			attr_dev(path14, "sodipodi:r2", "3.0648906");
			attr_dev(path14, "sodipodi:arg1", "1.8994983");
			attr_dev(path14, "sodipodi:arg2", "2.2921974");
			attr_dev(path14, "inkscape:flatsided", "false");
			attr_dev(path14, "inkscape:rounded", "0");
			attr_dev(path14, "inkscape:randomized", "0");
			attr_dev(path14, "d", "m 25.403755,41.510215 -1.79229,1.621522 1.379481,-1.984608 -2.413929,-0.120751 2.378769,-0.427889 -1.621521,-1.792289 1.984607,1.37948 0.120751,-2.413928 0.427889,2.378769 1.79229,-1.621522 -1.379481,1.984608 2.413929,0.120751 -2.37877,0.427889 1.621522,1.792289 -1.984607,-1.37948 -0.120751,2.413928 z");
			attr_dev(path14, "inkscape:transform-center-x", "-0.24780148");
			attr_dev(path14, "inkscape:transform-center-y", "-0.012727245");
			attr_dev(path14, "transform", "matrix(1.3644521,0,0,1.3050169,341.88786,6.8523291)");
			add_location(path14, file, 483, 12, 24101);
			attr_dev(path15, "sodipodi:type", "star");
			set_style(path15, "opacity", "0.997");
			set_style(path15, "fill", "#ffdd36");
			set_style(path15, "fill-opacity", "1");
			set_style(path15, "stroke", "none");
			set_style(path15, "stroke-width", "1.165");
			set_style(path15, "stroke-linecap", "round");
			set_style(path15, "stroke-miterlimit", "4");
			set_style(path15, "stroke-dasharray", "none");
			set_style(path15, "filter", "url(#filter3537)");
			attr_dev(path15, "id", "path1168");
			attr_dev(path15, "sodipodi:sides", "8");
			attr_dev(path15, "sodipodi:cx", "25.635633");
			attr_dev(path15, "sodipodi:cy", "40.830368");
			attr_dev(path15, "sodipodi:r1", "0.71830338");
			attr_dev(path15, "sodipodi:r2", "3.0648906");
			attr_dev(path15, "sodipodi:arg1", "1.8994983");
			attr_dev(path15, "sodipodi:arg2", "2.2921974");
			attr_dev(path15, "inkscape:flatsided", "false");
			attr_dev(path15, "inkscape:rounded", "0");
			attr_dev(path15, "inkscape:randomized", "0");
			attr_dev(path15, "d", "m 25.403755,41.510215 -1.79229,1.621522 1.379481,-1.984608 -2.413929,-0.120751 2.378769,-0.427889 -1.621521,-1.792289 1.984607,1.37948 0.120751,-2.413928 0.427889,2.378769 1.79229,-1.621522 -1.379481,1.984608 2.413929,0.120751 -2.37877,0.427889 1.621522,1.792289 -1.984607,-1.37948 -0.120751,2.413928 z");
			attr_dev(path15, "inkscape:transform-center-x", "-0.24780148");
			attr_dev(path15, "inkscape:transform-center-y", "-0.012727245");
			attr_dev(path15, "transform", "matrix(1.3644521,0,0,1.3050169,388.02172,-3.308051)");
			add_location(path15, file, 502, 12, 25305);
			attr_dev(path16, "sodipodi:type", "star");
			set_style(path16, "opacity", "0.997");
			set_style(path16, "fill", "#ffe14d");
			set_style(path16, "fill-opacity", "0.684986");
			set_style(path16, "stroke", "none");
			set_style(path16, "stroke-width", "1.165");
			set_style(path16, "stroke-linecap", "round");
			set_style(path16, "stroke-miterlimit", "4");
			set_style(path16, "stroke-dasharray", "none");
			set_style(path16, "filter", "url(#filter3505)");
			attr_dev(path16, "id", "path1170");
			attr_dev(path16, "sodipodi:sides", "8");
			attr_dev(path16, "sodipodi:cx", "25.635633");
			attr_dev(path16, "sodipodi:cy", "40.830368");
			attr_dev(path16, "sodipodi:r1", "0.71830338");
			attr_dev(path16, "sodipodi:r2", "3.0648906");
			attr_dev(path16, "sodipodi:arg1", "1.8994983");
			attr_dev(path16, "sodipodi:arg2", "2.2921974");
			attr_dev(path16, "inkscape:flatsided", "false");
			attr_dev(path16, "inkscape:rounded", "0");
			attr_dev(path16, "inkscape:randomized", "0");
			attr_dev(path16, "d", "m 25.403755,41.510215 -1.79229,1.621522 1.379481,-1.984608 -2.413929,-0.120751 2.378769,-0.427889 -1.621521,-1.792289 1.984607,1.37948 0.120751,-2.413928 0.427889,2.378769 1.79229,-1.621522 -1.379481,1.984608 2.413929,0.120751 -2.37877,0.427889 1.621522,1.792289 -1.984607,-1.37948 -0.120751,2.413928 z");
			attr_dev(path16, "inkscape:transform-center-x", "-0.24780148");
			attr_dev(path16, "inkscape:transform-center-y", "-0.012727245");
			attr_dev(path16, "transform", "matrix(1.3644521,0,0,1.3050169,442.10189,16.147466)");
			add_location(path16, file, 521, 12, 26509);
			attr_dev(g1, "inkscape:groupmode", "layer");
			attr_dev(g1, "id", "layer3");
			attr_dev(g1, "inkscape:label", "stars");
			set_style(g1, "display", "inline");
			set_style(g1, "filter", "url(#filter3937)");
			attr_dev(g1, "sodipodi:insensitive", "true");
			attr_dev(g1, "transform", "translate(-0.00981852,-0.03979085)");
			add_location(g1, file, 229, 8, 8135);
			set_style(path17, "fill", "url(#radialGradient898)");
			set_style(path17, "fill-opacity", "1");
			set_style(path17, "stroke", "none");
			set_style(path17, "stroke-width", "0.264583px");
			set_style(path17, "stroke-linecap", "butt");
			set_style(path17, "stroke-linejoin", "miter");
			set_style(path17, "stroke-opacity", "1");
			attr_dev(path17, "d", "m 0.22961908,119.79024 c 0,0 264.15457092,-72.310368 507.72129092,0 v 30.16269 c -243.56672,-72.310539 -507.72129092,0 -507.72129092,0 z");
			attr_dev(path17, "id", "path879");
			attr_dev(path17, "sodipodi:nodetypes", "ccccc");
			add_location(path17, file, 548, 12, 27982);
			attr_dev(g2, "inkscape:groupmode", "layer");
			attr_dev(g2, "id", "layer2");
			attr_dev(g2, "inkscape:label", "earth limb");
			attr_dev(g2, "sodipodi:insensitive", "true");
			set_style(g2, "display", "inline");
			attr_dev(g2, "transform", "translate(-0.00981852,-0.03979085)");
			add_location(g2, file, 541, 8, 27729);
			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg, "version", "1.1");
			attr_dev(svg, "viewBox", "0 0 507.94109 285.62598");
			attr_dev(svg, "height", "100%");
			attr_dev(svg, "width", "100%");
			attr_dev(svg, "class", "svelte-138k5ed");
			add_location(svg, file, 9, 4, 157);
			attr_dev(h2, "class", "svelte-138k5ed");
			add_location(h2, file, 556, 4, 28423);
			attr_dev(button, "class", "svelte-138k5ed");
			add_location(button, file, 557, 4, 28448);
			attr_dev(div0, "class", "container svelte-138k5ed");
			add_location(div0, file, 8, 0, 129);
			attr_dev(div1, "class", "bigdiv svelte-138k5ed");
			add_location(div1, file, 559, 0, 28480);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, div0, anchor);
			append_dev(div0, svg);
			append_dev(svg, defs);
			append_dev(defs, linearGradient);
			append_dev(linearGradient, stop0);
			append_dev(linearGradient, stop1);
			append_dev(defs, radialGradient);
			append_dev(defs, filter0);
			append_dev(filter0, feGaussianBlur0);
			append_dev(filter0, feColorMatrix0);
			append_dev(filter0, feColorMatrix1);
			append_dev(defs, filter1);
			append_dev(filter1, feGaussianBlur1);
			append_dev(defs, filter2);
			append_dev(filter2, feGaussianBlur2);
			append_dev(defs, filter3);
			append_dev(filter3, feGaussianBlur3);
			append_dev(defs, filter4);
			append_dev(filter4, feGaussianBlur4);
			append_dev(defs, filter5);
			append_dev(filter5, feGaussianBlur5);
			append_dev(defs, filter6);
			append_dev(filter6, feGaussianBlur6);
			append_dev(defs, filter7);
			append_dev(filter7, feGaussianBlur7);
			append_dev(defs, filter8);
			append_dev(filter8, feGaussianBlur8);
			append_dev(defs, filter9);
			append_dev(filter9, feGaussianBlur9);
			append_dev(svg, sodipodi_namedview);
			append_dev(svg, g0);
			append_dev(g0, path0);
			append_dev(svg, g1);
			append_dev(g1, path1);
			append_dev(g1, path2);
			append_dev(g1, path3);
			append_dev(g1, path4);
			append_dev(g1, path5);
			append_dev(g1, path6);
			append_dev(g1, path7);
			append_dev(g1, path8);
			append_dev(g1, path9);
			append_dev(g1, path10);
			append_dev(g1, path11);
			append_dev(g1, path12);
			append_dev(g1, path13);
			append_dev(g1, path14);
			append_dev(g1, path15);
			append_dev(g1, path16);
			append_dev(svg, g2);
			append_dev(g2, path17);
			append_dev(div0, t1);
			append_dev(div0, h2);
			append_dev(h2, t2);
			append_dev(div0, t3);
			append_dev(div0, button);
			append_dev(button, t4);
			insert_dev(target, t5, anchor);
			insert_dev(target, div1, anchor);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div0);
			if (detaching) detach_dev(t5);
			if (detaching) detach_dev(div1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Routes", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ splash });
	return [];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment.name
		});
	}
}

export default Routes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguYzM2NDQzN2UuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ub2RlX21vZHVsZXMvaW1hZ2VzL3NwbGFzaC1vcHQuc3ZnIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiL2NsaWVudC9mNzdiMmNkNmU2YWI5ZTVmLnN2Z1wiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsYUFBZTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
